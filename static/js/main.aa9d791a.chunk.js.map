{"version":3,"sources":["logo1.jpg","image3.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo1","alt","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,yFCA3CD,EAAOC,QAAU,IAA0B,oC,qGCiI5BC,G,MA1HH,WACR,OACI,yBAAKC,UAAU,UACX,4BAAQA,UAAU,UACd,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,0EAEJ,yBAAKA,UAAU,QACX,8DAEJ,yBAAKA,UAAU,QACX,oEAEJ,yBAAKA,UAAU,QACX,8GAEJ,yBAAKA,UAAU,QACX,kFAIZ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,sEAAa,6BAAb,sIAA4C,6BAA5C,6FAGR,yBAAKA,UAAU,QACX,yBAAKC,IAAKC,IAAOF,UAAU,QAAQG,IAAI,2BAInD,yBAAKH,UAAU,UACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YACX,0FAEJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,UAEnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UACf,4BAAQA,UAAU,SAAlB,UAEJ,yBAAKA,UAAU,QACX,mLAMpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,WACX,0FAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,UAEnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,4BAAQA,UAAU,QAAlB,qDAEJ,yBAAKA,UAAU,QACX,0BAAMA,UAAU,OAAhB,+FACA,yBAAKA,UAAU,OACf,mIAOpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YACX,wPAEJ,4BAAQA,UAAU,WAAlB,mEAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,mFAEA,yBAAKA,UAAU,QACX,2BAAOI,YAAY,UACnB,2BAAOA,YAAY,UACnB,8BAAUA,YAAY,cAE1B,4BAAQJ,UAAU,QAAlB,4DAGZ,4BAAQA,UAAU,UACd,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OACX,4GAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,UAEnB,yBAAKA,UAAU,OACX,oJC7GJK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.aa9d791a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.67c91fb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.ae71c89f.jpg\";","import React from 'react';\nimport './App.css';\nimport logo1 from './logo1.jpg';\nimport image3 from './image3.jpg';\n\n\n\nconst App = () => {\n    return (\n        <div className=\"Parent\">\n            <header className=\"header\">\n                <nav className=\"nav\">\n                    <div className=\"nav1\">\n                        <a>Главная</a>\n                    </div>\n                    <div className=\"nav2\">\n                        <a>Скилы</a>\n                    </div>\n                    <div className=\"nav3\">\n                        <a>Работы</a>\n                    </div>\n                    <div className=\"nav4\">\n                        <a>Работодателям</a>\n                    </div>\n                    <div className=\"nav5\">\n                        <a>Контакты</a>\n                    </div>\n                </nav>\n            </header>\n            <div className=\"resume\">\n                <div className=\"base1\">\n                    <div className=\"res\">\n                        <div className=\"show\">\n                            <span>Привет!<br/> Меня зовут Петров Сергей.<br/> Я - front-end разработчик.</span>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <img src={logo1} className=\"logo1\" alt=\"this is logo1 image\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"skills\">\n                <div className=\"base2\">\n                    <div className=\"myskills\">\n                        <span>Мои скиллы</span>\n                    </div>\n                    <div className=\"skillsshow\">\n                        <div className=\"ss1\"></div>\n                        <div className=\"ss2\">\n                            <div className=\"ss21\"></div>\n                            <div className=\"ss22\"></div>\n                        </div>\n                        <div className=\"ss3\">\n                            <div className=\"ss31\">\n                                <div className=\"ss311\"></div>\n                                <button className=\"ss312\">React</button>\n                            </div>\n                            <div className=\"ss32\">\n                                <span>Подробное описание навыка</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"jobs\">\n                <div className=\"base3\">\n                    <div className=\"my_jobs\">\n                        <span>Мои работы</span>\n                    </div>\n                    <div className=\"example_jobs\">\n                        <div className=\"ej1\">\n                            <div className=\"ej11\"></div>\n                            <div className=\"ej12\"></div>\n                        </div>\n                        <div className=\"ej2\">\n                            <div className=\"ej21\">\n                                <button className=\"look\">Смотреть</button>\n                            </div>\n                            <div className=\"ej22\">\n                                <span className=\"jp1\">Название проекта</span>\n                                <div className=\"jp2\">\n                                <span>Краткое описание</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"long\">\n                <div className=\"base5\">\n                    <div className=\"longlook\">\n                        <span>Рассматриваю варианты удалённой работы</span>\n                    </div>\n                    <button className=\"to_hire\">Нанять меня</button>\n                </div>\n            </div>\n            <div className=\"contacts\">\n                <div className=\"base6\">\n                    <div className=\"cont\">\n                        <span>Контакты</span>\n                    </div>\n                        <div className=\"area\">\n                            <input placeholder=\"input\"/>\n                            <input placeholder=\"input\"/>\n                            <textarea placeholder=\"textarea\"></textarea>\n                        </div>\n                        <button className=\"send\">Отправить</button>\n                </div>\n            </div>\n            <footer className=\"footer\">\n                <div className=\"base7\">\n                    <div className=\"fio\">\n                        <span>Сергей Петров</span>\n                    </div>\n                    <div className=\"soc\">\n                        <div className=\"soc1\"></div>\n                        <div className=\"soc2\"></div>\n                        <div className=\"soc3\"></div>\n                        <div className=\"soc4\"></div>\n                    </div>\n                    <div className=\"cop\">\n                        <span>© 2019 Все права защищены</span>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}